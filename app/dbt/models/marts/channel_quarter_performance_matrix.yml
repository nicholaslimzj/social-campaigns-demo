version: 2

models:
  - name: channel_quarter_performance_matrix
    description: >
      Analyzes marketing channel performance for the current quarter (last 3 months of available data). 
      Aggregates metrics at the channel, company, target audience, and campaign goal level. 
      Provides absolute performance metrics (conversion rate, ROI, acquisition cost, CTR), 
      relative performance comparisons against channel, company, dimension, and global averages, 
      and calculates a weighted composite score for ranking performance combinations. 
      Designed for dashboarding channel effectiveness and identifying high/low performers.
    config:
      materialized: table
      tags:
        - 'mart'
        - 'marketing'
        - 'performance'
        - 'quarterly'
    columns:
      - name: Channel_Used
        description: "The marketing channel used for the campaign (e.g., Facebook, Google Ads, Email)."
        tests:
          - not_null
          - dbt_utils.unique_combination_of_columns:
              combination_of_columns:
                - Channel_Used
                - Company
                - dimension_value
                - dimension_type
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR

      - name: Company
        description: "The company associated with the campaign."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR

      - name: dimension_value
        description: "The specific value of the dimension being analyzed (e.g., 'Brand Awareness' if dimension_type is 'goal', or 'All Ages' if dimension_type is 'target_audience')."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR

      - name: dimension_type
        description: "The type of dimension being analyzed ('goal' or 'target_audience')."
        tests:
          - not_null
          - accepted_values:
              values: ['goal', 'target_audience']
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR

      - name: campaign_count
        description: "The number of distinct campaigns included in this specific combination (Channel, Company, Dimension) for the quarter."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_non_negative
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: BIGINT

      - name: avg_conversion_rate
        description: "The average conversion rate for this combination over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              # Max value could theoretically exceed 1 if defined differently, but typically <= 1
              # max_value: 1 
              row_condition: "campaign_count > 0" # Only test non-null rows
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      - name: avg_roi
        description: "The average Return on Investment (ROI) for this combination over the quarter."
        tests:
          # ROI can be negative
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      - name: avg_acquisition_cost
        description: "The average cost to acquire a customer/conversion for this combination over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_non_negative
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      - name: avg_ctr
        description: "The average Click-Through Rate (CTR) for this combination over the quarter (Total Clicks / Total Impressions)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1 
              row_condition: "total_impressions > 0" # Only test non-null rows
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: FLOAT # Based on SQL CAST

      - name: total_clicks
        description: "The total number of clicks generated by campaigns in this combination over the quarter."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_non_negative
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: HUGEINT

      - name: total_impressions
        description: "The total number of impressions generated by campaigns in this combination over the quarter."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_non_negative
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: HUGEINT

      - name: total_spend
        description: "The estimated total spend for this combination over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_non_negative
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      - name: total_revenue
        description: "The estimated total revenue generated from this combination over the quarter."
        tests:
          # Revenue could theoretically be negative depending on definition, but usually non-negative
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      # Channel Averages
      - name: channel_avg_conversion_rate
        description: "The average conversion rate across all companies and dimensions for this specific channel over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: channel_avg_roi
        description: "The average ROI across all companies and dimensions for this specific channel over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: channel_avg_acquisition_cost
        description: "The average acquisition cost across all companies and dimensions for this specific channel over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: channel_avg_ctr
        description: "The average CTR across all companies and dimensions for this specific channel over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: channel_total_spend
        description: "The total spend across all companies and dimensions for this specific channel over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: channel_total_revenue
        description: "The total revenue across all companies and dimensions for this specific channel over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      # Channel-Company Averages
      - name: company_avg_conversion_rate
        description: "The average conversion rate across all dimensions for this specific channel and company over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: company_avg_roi
        description: "The average ROI across all dimensions for this specific channel and company over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: company_avg_acquisition_cost
        description: "The average acquisition cost across all dimensions for this specific channel and company over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: company_avg_ctr
        description: "The average CTR across all dimensions for this specific channel and company over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: company_total_spend
        description: "The total spend across all dimensions for this specific channel and company over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: company_total_revenue
        description: "The total revenue across all dimensions for this specific channel and company over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      # Dimension Averages
      - name: dimension_avg_conversion_rate
        description: "The average conversion rate across all companies for this specific channel and dimension over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: dimension_avg_roi
        description: "The average ROI across all companies for this specific channel and dimension over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: dimension_avg_acquisition_cost
        description: "The average acquisition cost across all companies for this specific channel and dimension over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: dimension_avg_ctr
        description: "The average CTR across all companies for this specific channel and dimension over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      # Global Averages
      - name: global_avg_conversion_rate
        description: "The global average conversion rate across all channels, companies, and dimensions over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: global_avg_roi
        description: "The global average ROI across all channels, companies, and dimensions over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: global_avg_acquisition_cost
        description: "The global average acquisition cost across all channels, companies, and dimensions over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: global_avg_ctr
        description: "The global average CTR across all channels, companies, and dimensions over the quarter."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      # Relative Performance Metrics vs Channel
      - name: conversion_rate_vs_channel_avg
        description: "Percentage difference of this combination's conversion rate compared to the channel average ((Combo CR / Channel CR) - 1)."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: roi_vs_channel_avg
        description: "Percentage difference of this combination's ROI compared to the channel average ((Combo ROI / Channel ROI) - 1)."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: acquisition_cost_vs_channel_avg
        description: "Percentage difference of this combination's acquisition cost compared to the channel average ((Channel AC / Combo AC) - 1). Higher is better (lower cost)."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: ctr_vs_channel_avg
        description: "Percentage difference of this combination's CTR compared to the channel average ((Combo CTR / Channel CTR) - 1)."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      # Relative Performance Metrics vs Company (within Channel)
      - name: conversion_rate_vs_company_avg
        description: "Percentage difference of this combination's conversion rate compared to the company's average within this channel."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: roi_vs_company_avg
        description: "Percentage difference of this combination's ROI compared to the company's average within this channel."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: acquisition_cost_vs_company_avg
        description: "Percentage difference of this combination's acquisition cost compared to the company's average within this channel. Higher is better."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: ctr_vs_company_avg
        description: "Percentage difference of this combination's CTR compared to the company's average within this channel."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      # Relative Performance Metrics vs Dimension (within Channel)
      - name: conversion_rate_vs_dimension_avg
        description: "Percentage difference of this combination's conversion rate compared to the dimension's average within this channel."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: roi_vs_dimension_avg
        description: "Percentage difference of this combination's ROI compared to the dimension's average within this channel."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: acquisition_cost_vs_dimension_avg
        description: "Percentage difference of this combination's acquisition cost compared to the dimension's average within this channel. Higher is better."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: ctr_vs_dimension_avg
        description: "Percentage difference of this combination's CTR compared to the dimension's average within this channel."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      # Relative Performance Metrics vs Global
      - name: conversion_rate_vs_global_avg
        description: "Percentage difference of this combination's conversion rate compared to the global average."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: roi_vs_global_avg
        description: "Percentage difference of this combination's ROI compared to the global average."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: acquisition_cost_vs_global_avg
        description: "Percentage difference of this combination's acquisition cost compared to the global average. Higher is better."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: ctr_vs_global_avg
        description: "Percentage difference of this combination's CTR compared to the global average."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      # Allocation Percentages
      - name: spend_pct_of_channel
        description: "The percentage of the channel's total spend allocated to this specific combination (Combo Spend / Channel Spend)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1 
              row_condition: "channel_total_spend > 0" # Only test non-null rows
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: revenue_pct_of_channel
        description: "The percentage of the channel's total revenue contributed by this specific combination (Combo Revenue / Channel Revenue)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              # Can exceed 1 if other parts of channel have negative revenue
              row_condition: "channel_total_revenue != 0" # Only test non-null rows
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE

      # Composite Score and Classification
      - name: composite_score
        description: "A weighted score reflecting overall performance relative to global averages (Weights: ROI 40%, Conversion Rate 25%, Acquisition Cost 25%, CTR 10%). Higher is better."
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
      - name: performance_tier
        description: "Categorization based on composite score ('high_performer' >= 1.2, 'low_performer' <= 0.8, 'average_performer' otherwise)."
        tests:
          - not_null
          - accepted_values:
              values: ['high_performer', 'average_performer', 'low_performer']
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR
      - name: is_top_performer
        description: "Boolean flag indicating if this combination ranks in the top 10% based on composite score within its dimension type."
        tests:
          - not_null
          - accepted_values:
              values: [True, False] # YAML representation of boolean
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: BOOLEAN