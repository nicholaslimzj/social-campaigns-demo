version: 2

models:
  - name: metrics_historical_anomalies
    description: |
      Identifies anomalies in key performance metrics for each company on a monthly basis.
      It calculates rolling 3-month statistics (mean and standard deviation) for metrics like conversion rate, ROI, acquisition cost, clicks, impressions, and CTR.
      Anomalies are flagged using a Z-score methodology, where a deviation greater than 2 standard deviations from the rolling mean is considered an anomaly.
      This model is intended for performance monitoring dashboards, anomaly detection alerts, and risk management visualizations.
    config:
      materialized: table
      tags:
        - 'mart'
        - 'analytics'
        - 'performance'
        - 'anomaly_detection'
    columns:
      - name: Company
        description: "Identifier for the company whose metrics are being analyzed."
        tests:
          - not_null
          # Test that the company exists in the source staging table
          - relationships:
              to: ref('stg_campaigns')
              field: Company
          # Define the multi-column unique key for the table
          - dbt_utils.unique_combination_of_columns:
              combination_of_columns:
                - Company
                - month

      - name: month
        description: "The calendar month number (1-12) for which the metrics and anomalies are calculated."
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

      - name: avg_conversion_rate
        description: "The average conversion rate for the company during the specified month."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              # Max value could theoretically exceed 1 if defined differently, but typically <= 1
              # max_value: 1 # Optional: Add if strictly defined as rate <= 1
              row_condition: "avg_conversion_rate is not null" # Avoid testing nulls

      - name: conversion_rate_mean
        description: "Rolling 3-month average conversion rate (excluding the current month) used as the expected value for anomaly detection."
        # Rolling means can be null for initial periods

      - name: conversion_rate_std
        description: "Rolling 3-month standard deviation of the conversion rate (excluding the current month) used to measure volatility."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "conversion_rate_std is not null" # Std dev must be non-negative

      - name: conversion_rate_z
        description: "Z-score for the monthly average conversion rate, indicating deviation from the rolling mean in terms of standard deviations. Calculated as (value - rolling_mean) / rolling_std."
        # Z-score can be null if std is 0 or null

      - name: conversion_rate_anomaly
        description: "Flag indicating if the monthly average conversion rate is an anomaly ('anomaly' if absolute Z-score > 2, 'normal' otherwise)."
        tests:
          - not_null
          - accepted_values:
              values: ['normal', 'anomaly']

      - name: avg_roi
        description: "The average Return on Investment (ROI) for the company during the specified month."
        # ROI can be negative

      - name: roi_mean
        description: "Rolling 3-month average ROI (excluding the current month) used as the expected value for anomaly detection."

      - name: roi_std
        description: "Rolling 3-month standard deviation of ROI (excluding the current month) used to measure volatility."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "roi_std is not null" # Std dev must be non-negative

      - name: roi_z
        description: "Z-score for the monthly average ROI. Calculated as (value - rolling_mean) / rolling_std."

      - name: roi_anomaly
        description: "Flag indicating if the monthly average ROI is an anomaly ('anomaly' if absolute Z-score > 2, 'normal' otherwise)."
        tests:
          - not_null
          - accepted_values:
              values: ['normal', 'anomaly']

      - name: avg_acquisition_cost
        description: "The average acquisition cost for the company during the specified month."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "avg_acquisition_cost is not null" # Cost should be non-negative

      - name: acquisition_cost_mean
        description: "Rolling 3-month average acquisition cost (excluding the current month) used as the expected value."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "acquisition_cost_mean is not null" # Mean cost should be non-negative

      - name: acquisition_cost_std
        description: "Rolling 3-month standard deviation of acquisition cost (excluding the current month)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "acquisition_cost_std is not null" # Std dev must be non-negative

      - name: acquisition_cost_z
        description: "Z-score for the monthly average acquisition cost. Calculated as (value - rolling_mean) / rolling_std."

      - name: acquisition_cost_anomaly
        description: "Flag indicating if the monthly average acquisition cost is an anomaly ('anomaly' if absolute Z-score > 2, 'normal' otherwise)."
        tests:
          - not_null
          - accepted_values:
              values: ['normal', 'anomaly']

      - name: total_clicks
        description: "Total number of clicks for the company during the specified month."
        tests:
          - not_null # Assuming 0 is valid, null indicates missing aggregation data
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0

      - name: clicks_mean
        description: "Rolling 3-month average of total clicks (excluding the current month)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "clicks_mean is not null"

      - name: clicks_std
        description: "Rolling 3-month standard deviation of total clicks (excluding the current month)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "clicks_std is not null"

      - name: clicks_z
        description: "Z-score for the total monthly clicks. Calculated as (value - rolling_mean) / rolling_std."

      - name: clicks_anomaly
        description: "Flag indicating if the total monthly clicks is an anomaly ('anomaly' if absolute Z-score > 2, 'normal' otherwise)."
        tests:
          - not_null
          - accepted_values:
              values: ['normal', 'anomaly']

      - name: total_impressions
        description: "Total number of impressions for the company during the specified month."
        tests:
          - not_null # Assuming 0 is valid, null indicates missing aggregation data
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0

      - name: impressions_mean
        description: "Rolling 3-month average of total impressions (excluding the current month)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "impressions_mean is not null"

      - name: impressions_std
        description: "Rolling 3-month standard deviation of total impressions (excluding the current month)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "impressions_std is not null"

      - name: impressions_z
        description: "Z-score for the total monthly impressions. Calculated as (value - rolling_mean) / rolling_std."

      - name: impressions_anomaly
        description: "Flag indicating if the total monthly impressions is an anomaly ('anomaly' if absolute Z-score > 2, 'normal' otherwise)."
        tests:
          - not_null
          - accepted_values:
              values: ['normal', 'anomaly']

      - name: monthly_ctr
        description: "Click-Through Rate (CTR) calculated for the company during the specified month (Total Clicks / Total Impressions)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1 # CTR is a rate between 0 and 1
              row_condition: "monthly_ctr is not null"

      - name: ctr_mean
        description: "Rolling 3-month average CTR (excluding the current month)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1
              row_condition: "ctr_mean is not null"

      - name: ctr_std
        description: "Rolling 3-month standard deviation of CTR (excluding the current month)."
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "ctr_std is not null"

      - name: ctr_z
        description: "Z-score for the monthly CTR. Calculated as (value - rolling_mean) / rolling_std."

      - name: ctr_anomaly
        description: "Flag indicating if the monthly CTR is an anomaly ('anomaly' if absolute Z-score > 2, 'normal' otherwise)."
        tests:
          - not_null
          - accepted_values:
              values: ['normal', 'anomaly']

      - name: has_anomaly
        description: "Boolean flag indicating if ANY metric for the given company and month was flagged as an anomaly. Useful for filtering."
        tests:
          - not_null
          - accepted_values:
              values: [True, False] # Or true/false depending on warehouse specifics