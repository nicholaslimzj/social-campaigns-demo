version: 2

models:
  - name: dimensions_quarter_performance_rankings
    description: |
      Ranks entities (companies, channels, segments, target audiences) within their respective dimensions based on key performance metrics (Conversion Rate, ROI, Acquisition Cost, CTR) for the most recent quarter.
      Calculates quarter-over-quarter (QoQ) changes and identifies performance trends (improved/declined/unchanged).
      The 'current quarter' is defined as the last 3 months of available data in the source, and the 'previous quarter' is the 3 months preceding that.
      This model unpivots the metrics for easier analysis and dashboard integration.
      Built from `stg_campaigns`.
    config:
      materialized: table
      tags:
        - 'mart'
        - 'performance'
        - 'ranking'
        - 'quarterly'
        - 'comparison'
    columns:
      - name: dimension
        description: "The dimension being analyzed (e.g., 'company', 'channel', 'segment', 'audience')."
        data_type: VARCHAR
        tests:
          - not_null
          - accepted_values:
              values: ['company', 'channel', 'segment', 'audience']
          # Primary key definition using unique combination
          - dbt_utils.unique_combination_of_columns:
              combination_of_columns:
                - dimension
                - entity
                - metric

      - name: entity
        description: "The specific entity within the dimension being ranked (e.g., a specific company name, channel name, segment name, or audience group)."
        data_type: VARCHAR
        tests:
          - not_null

      - name: metric
        description: "The performance metric being measured (e.g., 'conversion_rate', 'roi', 'acquisition_cost', 'ctr')."
        data_type: VARCHAR
        tests:
          - not_null
          - accepted_values:
              values: ['conversion_rate', 'roi', 'acquisition_cost', 'ctr']

      - name: metric_value
        description: "The calculated value of the metric for the entity in the current quarter."
        data_type: DOUBLE
        tests:
          - not_null
          # Basic non-negativity check where applicable (ROI can be negative)
          - dbt_expectations.expect_column_values_to_be_non_negative:
              where: "metric != 'roi'"

      - name: metric_rank
        description: "The rank of the entity within its dimension for the specific metric in the current quarter. Lower rank is better for acquisition_cost, higher rank is better for others."
        data_type: BIGINT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              # Max value could theoretically be tested against total_entities, but simple >= 1 is robust.

      - name: total_entities
        description: "The total number of unique entities within the dimension for the current quarter."
        data_type: BIGINT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1

      - name: campaign_count
        description: "The number of campaigns associated with this entity within the dimension during the current quarter."
        data_type: BIGINT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1

      - name: prev_metric_value
        description: "The calculated value of the metric for the entity in the previous quarter. NULL if no data exists for the previous quarter."
        data_type: DOUBLE
        # No not_null test as previous data might not exist

      - name: metric_qoq_change
        description: "The percentage change in the metric value from the previous quarter to the current quarter. Calculated as (current - previous) / previous, except for acquisition cost where improvement is negative change. NULL if no previous data."
        data_type: DOUBLE
        # No not_null test as previous data might not exist

      - name: trend
        description: "Indicates the performance trend based on the QoQ change ('improved', 'declined', 'unchanged', 'no_previous_data'). Note: 'improved' for acquisition_cost means the value decreased."
        data_type: VARCHAR
        tests:
          - not_null
          - accepted_values:
              values: ['improved', 'declined', 'unchanged', 'no_previous_data']

      - name: current_window_start_month
        description: "The starting month number (1-12) of the current 3-month analysis window."
        data_type: BIGINT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 12

      - name: current_window_end_month
        description: "The ending month number (1-12) of the current 3-month analysis window."
        data_type: BIGINT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 12

      - name: previous_window_start_month
        description: "The starting month number (1-12) of the previous 3-month analysis window used for comparison."
        data_type: BIGINT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -2 # Can be negative if current window starts early in the year
              max_value: 9

      - name: previous_window_end_month
        description: "The ending month number (1-12) of the previous 3-month analysis window used for comparison."
        data_type: BIGINT
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 12