version: 2

models:
  - name: time_metrics
    description: "Aggregates key campaign performance metrics from `stg_campaigns` on a monthly basis. This model provides a high-level overview of campaign effectiveness trends over time."
    config:
      materialized: table
      tags:
        - 'mart'
        - 'marketing'
        - 'monthly'
        - 'reporting'
    columns:
      - name: month
        description: "The calendar month (1-12) for which the metrics are aggregated. Extracted from the campaign date in stg_campaigns."
        tests:
          - not_null
          - unique
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
              description: "Month must be an integer between 1 (January) and 12 (December)."

      - name: campaign_count
        description: "The total number of distinct campaigns active during the month."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_non_negative:
              description: "Campaign count cannot be negative."
              # Alternatively, using a basic expression test:
              # expression: '>= 0'

      - name: avg_conversion_rate
        description: "The average conversion rate across all campaigns active during the month. Represents the average efficiency of campaigns in achieving their conversion goals."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              # Max value can theoretically exceed 1 depending on definition, but often capped at 1 or slightly above.
              # max_value: 1 # Uncomment and adjust if a strict upper bound is expected.
              strictly: false
              description: "Average conversion rate should generally be non-negative."

      - name: avg_roi
        description: "The average Return on Investment (ROI) across all campaigns active during the month. Indicates the average profitability of campaigns."
        tests:
          - not_null
          # ROI can be negative if costs exceed revenue/value generated.

      - name: avg_acquisition_cost
        description: "The average cost to acquire a customer (CAC) or desired outcome across all campaigns active during the month."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_non_negative:
              description: "Average acquisition cost cannot be negative."
              # Alternatively, using a basic expression test:
              # expression: '>= 0'

      - name: total_clicks
        description: "The total number of clicks generated by all campaigns during the month."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_non_negative:
              description: "Total clicks cannot be negative."
              # Alternatively, using a basic expression test:
              # expression: '>= 0'

      - name: total_impressions
        description: "The total number of impressions served by all campaigns during the month."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_non_negative:
              description: "Total impressions cannot be negative."
              # Alternatively, using a basic expression test:
              # expression: '>= 0'

      - name: overall_ctr
        description: "The overall Click-Through Rate (CTR) for the month, calculated as (Total Clicks / Total Impressions). Measures the overall effectiveness of ad creatives and targeting in generating clicks."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1 # CTR is a ratio between 0 and 1
              strictly: false
              description: "Overall CTR must be between 0 and 1 (inclusive)."
          # Optional: Test relationship between metrics if possible/needed
          # - expression: 'total_impressions = 0 OR abs(overall_ctr - (total_clicks::FLOAT / total_impressions)) < 0.0001'
          #   description: "Verify CTR calculation consistency, allowing for floating point inaccuracies and division by zero."