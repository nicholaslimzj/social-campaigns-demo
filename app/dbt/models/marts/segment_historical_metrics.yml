version: 2

models:
  - name: segment_historical_metrics
    description: "Aggregates historical campaign performance metrics by customer segment. Provides insights into segment-level performance, targeting effectiveness, and supports segmentation analysis. Used in Customer Segment Performance dashboards and Audience Targeting recommendations."
    config:
      materialized: table
      tags: ['mart', 'marketing', 'segmentation', 'performance', 'historical']

    columns:
      - name: Customer_Segment
        description: "The distinct customer segment targeted by campaigns (e.g., Technology, Home, Food). This is the primary dimension for aggregation."
        tests:
          - not_null
          - unique
          # Test that the segment values exist in the underlying staging table
          - relationships:
              to: ref('stg_campaigns')
              field: Customer_Segment # Assuming 'Customer_Segment' exists in stg_campaigns

      - name: campaign_count
        description: "The total number of campaigns associated with this customer segment."
        tests:
          - not_null
          # Count should be non-negative
          - dbt_utils.expression_is_true:
              expression: '>= 0'

      - name: avg_conversion_rate
        description: "The average conversion rate across all campaigns targeting this segment. Expressed as a decimal (e.g., 0.08 represents 8%)."
        tests:
          - not_null
          # Conversion rate should generally be non-negative and typically not excessively high
          - dbt_utils.expression_is_true:
              expression: '>= 0'
          - dbt_utils.expression_is_true:
              expression: '<= 1.5' # Assuming conversion rate won't exceed 150%

      - name: avg_roi
        description: "The average Return on Investment (ROI) for campaigns targeting this segment. Calculated as (Revenue - Cost) / Cost."
        tests:
          - not_null
          # ROI can be negative, so only a not_null test is broadly applicable without specific business rules.

      - name: avg_acquisition_cost
        description: "The average cost to acquire a customer (CAC) through campaigns targeting this segment."
        tests:
          - not_null
          # Acquisition cost should be non-negative
          - dbt_utils.expression_is_true:
              expression: '>= 0'

      - name: total_clicks
        description: "The total number of clicks generated by campaigns targeting this segment across all historical data."
        tests:
          - not_null
          # Clicks should be non-negative
          - dbt_utils.expression_is_true:
              expression: '>= 0'

      - name: total_impressions
        description: "The total number of impressions served for campaigns targeting this segment across all historical data."
        tests:
          - not_null
          # Impressions should be non-negative
          - dbt_utils.expression_is_true:
              expression: '>= 0'

      - name: overall_ctr
        description: "The overall Click-Through Rate (CTR) for this segment, calculated as Total Clicks / Total Impressions across all campaigns for the segment. Expressed as a decimal."
        tests:
          - not_null
          # CTR should be between 0 and 1 (inclusive)
          - dbt_utils.expression_is_true:
              expression: '>= 0'
          - dbt_utils.expression_is_true:
              expression: '<= 1'